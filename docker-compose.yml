version: "3.8"

services:
  # Zipkin for distributed tracing
  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - weather-network

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP HTTP receiver
      - "8888:8888" # Prometheus metrics
    depends_on:
      - zipkin
    networks:
      - weather-network

  # Service A - Input validation service
  service-a:
    build:
      context: ./service-a
      dockerfile: Dockerfile
    container_name: service-a
    ports:
      - "8080:8080"
    environment:
      - OTEL_EXPORTER_ZIPKIN_ENDPOINT=http://zipkin:9411/api/v2/spans
    depends_on:
      - service-b
      - zipkin
    networks:
      - weather-network
    restart: unless-stopped

  # Service B - Weather orchestration service
  service-b:
    build:
      context: ./service-b
      dockerfile: Dockerfile
    container_name: service-b
    ports:
      - "8081:8081"
    environment:
      - WEATHER_API_KEY=${WEATHER_API_KEY}
      - OTEL_EXPORTER_ZIPKIN_ENDPOINT=http://zipkin:9411/api/v2/spans
    depends_on:
      - zipkin
    networks:
      - weather-network
    restart: unless-stopped

networks:
  weather-network:
    driver: bridge

volumes:
  zipkin-data:
